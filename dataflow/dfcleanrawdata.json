{
	"name": "dfcleanrawdata",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "rawdata",
						"type": "DatasetReference"
					},
					"name": "dfcleanrawdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cleaneddata",
						"type": "DatasetReference"
					},
					"name": "storedatatocleanedlake"
				},
				{
					"dataset": {
						"referenceName": "splitteddata",
						"type": "DatasetReference"
					},
					"name": "storesplitteddatatodatalake"
				}
			],
			"transformations": [
				{
					"name": "unrollposts"
				},
				{
					"name": "trimtext"
				},
				{
					"name": "cleantext"
				},
				{
					"name": "newcolumnfilename"
				},
				{
					"name": "splittext"
				}
			],
			"script": "source(output(\n\t\tmoreResultsAvailable as short,\n\t\tnext as string,\n\t\tposts as (author as string, crawled as string, entities as (locations as (name as string, sentiment as string)[], organizations as (name as string, sentiment as string)[], persons as (name as string, sentiment as string)[]), external_images as string[], external_links as string[], highlightText as string, highlightThreadTitle as string, highlightTitle as string, language as string, ord_in_thread as boolean, parent_url as string, published as string, rating as double, text as string, thread as (country as string, domain_rank as short, main_image as string, participants_count as boolean, performance_score as short, published as string, replies_count as boolean, section_title as string, site as string, site_categories as string[], site_full as string, site_section as string, site_type as string, social as (facebook as (comments as short, likes as short, shares as short), gplus as (shares as boolean), linkedin as (shares as boolean), pinterest as (shares as short), stumbledupon as (shares as boolean), vk as (shares as short)), spam_score as double, title as string, title_full as string, url as string, uuid as string), title as string, updated as string, url as string, uuid as string)[],\n\t\trequestsLeft as short,\n\t\ttotalResults as short,\n\t\twarnings as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> dfcleanrawdata\ndfcleanrawdata foldDown(unroll(posts),\n\tmapColumn(\n\t\tmoreResultsAvailable,\n\t\tnext,\n\t\tauthor = posts.author,\n\t\tcrawled = posts.crawled,\n\t\tentities = posts.entities,\n\t\texternal_images = posts.external_images,\n\t\texternal_links = posts.external_links,\n\t\thighlightText = posts.highlightText,\n\t\thighlightThreadTitle = posts.highlightThreadTitle,\n\t\thighlightTitle = posts.highlightTitle,\n\t\tlanguage = posts.language,\n\t\tord_in_thread = posts.ord_in_thread,\n\t\tparent_url = posts.parent_url,\n\t\tpublished = posts.published,\n\t\trating = posts.rating,\n\t\ttext = posts.text,\n\t\tthread = posts.thread,\n\t\ttitle = posts.title,\n\t\tupdated = posts.updated,\n\t\turl = posts.url,\n\t\tuuid = posts.uuid,\n\t\trequestsLeft,\n\t\ttotalResults,\n\t\twarnings\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> unrollposts\nunrollposts derive(text = trim(text)) ~> trimtext\ntrimtext derive(text = regexReplace(text, `\\d+\\W`, '')) ~> cleantext\ncleantext derive(filename = concat(\"/\",toString(year(currentUTC())),\"/\",toString(month(currentUTC())),\"/\",toString(dayOfMonth(currentUTC())),\"/\", uuid,\".json\")) ~> newcolumnfilename\nnewcolumnfilename derive(texts = regexSplit(text, `(?<=\\G.{1000})`)) ~> splittext\nnewcolumnfilename sink(input(\n\t\tposts as (thread as (uuid as string, url as string, site_full as string, site as string, site_section as string, site_categories as string[], section_title as string, title as string, title_full as string, published as string, replies_count as string, participants_count as string, site_type as string, country as string, spam_score as double, main_image as string, performance_score as string, domain_rank as string, social as (facebook as (likes as string, comments as string, shares as string), gplus as (shares as string), pinterest as (shares as string), linkedin as (shares as string), stumbledupon as (shares as string), vk as (shares as string))), uuid as string, url as string, ord_in_thread as string, parent_url as string, author as string, published as string, title as string, text as string, highlightText as string, highlightTitle as string, highlightThreadTitle as string, language as string, external_links as string[], external_images as string[], entities as (persons as string[], organizations as (name as string, sentiment as string)[], locations as (name as string, sentiment as string)[]), rating as string, crawled as string, updated as string)[],\n\t\ttotalResults as string,\n\t\tmoreResultsAvailable as string,\n\t\tnext as string,\n\t\trequestsLeft as string,\n\t\twarnings as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'filename',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> storedatatocleanedlake\nsplittext sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn:'filename',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> storesplitteddatatodatalake"
		}
	}
}